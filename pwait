#!/bin/bash
# Copyright (c) 2013, William Ting.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# - Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# - Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

b1=`tput bold`
b0=`tput sgr0`

# default values
version="0.1"
interval=0.1

name=
verbose=

# argument parsing
while true; do
    case "${1}" in
        -n|--name)
            name=1
            declare -A pid
            shift
            ;;
        -v|--verbose)
            verbose=1
            shift
            ;;
        -vv)
            verbose=2
            shift
            ;;
        --version)
            echo "version ${version}"
            exit
            ;;
        -*|--*)
            echo "invalid option: ${1}" 1>&2
            exit 1
            ;;
        *)
            if [[ -n "${@}" ]]; then
                pid["${1}"]=1
                shift
            else
                break
            fi
            ;;
    esac
done

unset pid[0]
if [ "${#pid[@]}" -eq 0 ]; then
    echo "usage: $(basename ${0}) [-n|--name] [-v|--verbose] [pid...]" 1>&2
    exit 1
fi

# check pids
function display_pids {
    if [ ${name} ]; then
        for id in "${!pid[@]}"; do
            echo "watching [${id}]: $(pidof ${id})"
        done
    else
        echo "watching : ${!pid[@]}"
    fi
}

function remove_pid {
    unset pid[${1}]
    if [ ${verbose} ]; then
        echo "${b1}removed  : ${1}${b0}"
    fi
}

if [ ${verbose} -gt 0 ]; then
    display_pids
fi

while [ "${#pid[@]}" -ne 0 ]; do
    if [ ${verbose} -gt 1 ]; then
        display_pids
    fi
    for id in "${!pid[@]}"; do
        if [ ! ${name} ] && [ "${pid[${id}]}" -eq 1 ] && [ ! -e "/proc/${id}" ]; then
            remove_pid ${id}
        elif [ ${name} ] && [ -z "$(pidof ${id})" ]; then
            remove_pid ${id}
        fi
    done
    sleep ${interval}
done

exit
